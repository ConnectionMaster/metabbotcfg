# first, reload each module by name
import random
import types
from buildbot_travis import TravisConfigurator
from metabbotcfg import reporters, workers, www
from buildbot.plugins import util
from datetime import timedelta

c = BuildmasterConfig = {}
c['workers'] = workers.workers
c['services'] = reporters.reporters

def get_spawner_workers(self):
    workers = [s.workername for s in self.config["workers"] if "local" in s.workername]
    if not workers:
        return self.get_all_workers()
    return workers

def get_runner_workers(self):
    workers = [
        s.workername for s in self.config["workers"]
        if "kube" in s.workername or "p12" in s.workername
    ]
    if not workers:
        return self.get_all_workers()
    return workers

configurator = TravisConfigurator(BuildmasterConfig, basedir)
configurator.get_spawner_workers = types.MethodType(get_spawner_workers, configurator)
configurator.get_runner_workers = types.MethodType(get_runner_workers, configurator)
configurator.fromYaml('metabbotcfg/cfg.yml')

# bbtravis already setups www, we must override some of the config after
www.setupWWW(c)

c['projectName'] = "Buildbot"
c['projectURL'] = "http://buildbot.net/"

c['buildbotNetUsageData'] = None

def select_next_worker(builder, workers, buildrequest):
    preferred_workers = [w for w in workers if "p12-" in w.worker.workername]
    if preferred_workers:
        return random.choice(preferred_workers)
    if workers:
        return random.choice(workers)
    return None

c["select_next_worker"] = select_next_worker

# configure a janitor which will delete all logs older than two month, and will run on sundays at noon
c['configurators'] = [util.JanitorConfigurator(
    logHorizon=timedelta(weeks=8),
    hour=12,
    dayOfWeek=6)]

with open("metabbotcfg/db_url", encoding="utf-8") as f:
    db_url = f.read().strip()

c["db"] = {"db_url" : db_url}
